// <auto-generated />
using System;
using ClothingStoreApi.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothingStoreApi.Migrations
{
    [DbContext(typeof(ClothingStoreContext))]
    partial class ClothingStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClothingStoreApi.Models.Advertisement", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ad_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdId"), 1L, 1);

                    b.Property<byte[]>("AdvImage")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("advImage");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("publicationDate");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("seller_id");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title");

                    b.HasKey("AdId")
                        .HasName("PK__Advertis__CAA4A62799049C04");

                    b.HasIndex("SellerId");

                    b.ToTable("Advertisement", (string)null);
                });

            modelBuilder.Entity("ClothingStoreApi.Models.AdvertisementAttribute", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<int?>("AdId")
                        .HasColumnType("int")
                        .HasColumnName("ad_id");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("brand");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<string>("Size")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("size");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("CategoryId")
                        .HasName("PK__Advertis__D54EE9B4BB8816B1");

                    b.HasIndex("AdId");

                    b.ToTable("Advertisement_Attribute", (string)null);
                });

            modelBuilder.Entity("ClothingStoreApi.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"), 1L, 1);

                    b.Property<int?>("AdId")
                        .HasColumnType("int")
                        .HasColumnName("ad_id");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("discountPercentage");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.HasKey("DiscountId");

                    b.HasIndex("AdId");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("ClothingStoreApi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int?>("AdId")
                        .HasColumnType("int")
                        .HasColumnName("ad_id");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("orderDate");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId");

                    b.HasIndex("AdId");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("ClothingStoreApi.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rating_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"), 1L, 1);

                    b.Property<int?>("AdId")
                        .HasColumnType("int")
                        .HasColumnName("ad_id");

                    b.Property<DateTime?>("RatingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("ratingDate");

                    b.Property<decimal?>("RatingValue")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("ratingValue");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("review");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("RatingId");

                    b.HasIndex("AdId");

                    b.HasIndex("UserId");

                    b.ToTable("Rating", (string)null);
                });

            modelBuilder.Entity("ClothingStoreApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("AccountStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("accountStatus");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("avatar");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("lastName");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Sex")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sex");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ClothingStoreApi.Models.Advertisement", b =>
                {
                    b.HasOne("ClothingStoreApi.Models.User", "Seller")
                        .WithMany("Advertisements")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Advertise__selle__398D8EEE");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("ClothingStoreApi.Models.AdvertisementAttribute", b =>
                {
                    b.HasOne("ClothingStoreApi.Models.Advertisement", "Ad")
                        .WithMany("AdvertisementAttributes")
                        .HasForeignKey("AdId")
                        .HasConstraintName("FK__Advertise__ad_id__3C69FB99");

                    b.Navigation("Ad");
                });

            modelBuilder.Entity("ClothingStoreApi.Models.Discount", b =>
                {
                    b.HasOne("ClothingStoreApi.Models.Advertisement", "Ad")
                        .WithMany("Discounts")
                        .HasForeignKey("AdId")
                        .HasConstraintName("FK__Discount__ad_id__46E78A0C");

                    b.Navigation("Ad");
                });

            modelBuilder.Entity("ClothingStoreApi.Models.Order", b =>
                {
                    b.HasOne("ClothingStoreApi.Models.Advertisement", "Ad")
                        .WithMany("Orders")
                        .HasForeignKey("AdId")
                        .HasConstraintName("FK__Order__ad_id__403A8C7D");

                    b.HasOne("ClothingStoreApi.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Order__user_id__3F466844");

                    b.Navigation("Ad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothingStoreApi.Models.Rating", b =>
                {
                    b.HasOne("ClothingStoreApi.Models.Advertisement", "Ad")
                        .WithMany("Ratings")
                        .HasForeignKey("AdId")
                        .HasConstraintName("FK__Rating__ad_id__4316F928");

                    b.HasOne("ClothingStoreApi.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Rating__user_id__440B1D61");

                    b.Navigation("Ad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothingStoreApi.Models.Advertisement", b =>
                {
                    b.Navigation("AdvertisementAttributes");

                    b.Navigation("Discounts");

                    b.Navigation("Orders");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("ClothingStoreApi.Models.User", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Orders");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
